name: Docker Image CI
on:
  push:
    branches: ['main']
env:
  TAG: dogcalas/tai-mainsite:latest
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set env vars
        shell: bash
        run: |
          echo API_SERVER="${{ secrets.API_SERVER }}" >> .env
          echo API_TOKEN="${{ secrets.API_TOKEN }}" >> .env
          echo PREVIEW_SECRET="${{ secrets.PREVIEW_SECRET }}" >> .env
          echo PUBLIC_FIREBASE_API_KEY="${{ secrets.PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo PUBLIC_FIREBASE_APP_ID="${{ secrets.PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo PUBLIC_FIREBASE_AUTH_DOMAIN="${{ secrets.PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo PUBLIC_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo PUBLIC_FIREBASE_PROJECT_ID="${{ secrets.PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo PUBLIC_FIREBASE_STORAGE_BUCKET="${{ secrets.PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build Docker image & push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.TAG }}
          cache-to: type=inline
